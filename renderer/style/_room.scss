///AAAAAAAAAAAAAAAAAAA idk why i have to do this, making a mental note to clean it all up latter
.room{
    @include baseRoom();
    border: 0.3rem solid $roomDarkGrey;
    border-radius: 0.4rem;
}
.room-left{
    @include baseRoom();
    border-right: 0.3rem solid $roomDarkGrey; border-top: 0.3rem solid $roomDarkGrey; border-bottom: 0.3rem solid $roomDarkGrey;
    border-top-right-radius: 0.4rem; border-bottom-right-radius: 0.4rem;
    width: $roomSizeFacing;
    transform: translate(-0.5rem, 0);
}
.room-right{
    @include baseRoom();
    border-left: 0.3rem solid $roomDarkGrey; border-top: 0.3rem solid $roomDarkGrey; border-bottom: 0.3rem solid $roomDarkGrey;
    border-top-left-radius: 0.4rem; border-bottom-left-radius: 0.4rem;
    width: $roomSizeFacing;
}
.room-up{
    @include baseRoom();
    border-left: 0.3rem solid $roomDarkGrey; border-bottom: 0.3rem solid $roomDarkGrey; border-right: 0.3rem solid $roomDarkGrey;
    border-top-right-radius: 0.4rem; border-top-left-radius: 0.4rem;
    height: $roomSizeFacing;
    transform: translate(0, -0.5rem);
}
.room-down{
    @include baseRoom();
    border-left: 0.3rem solid $roomDarkGrey; border-top: 0.3rem solid $roomDarkGrey; border-right: 0.3rem solid $roomDarkGrey;
    border-bottom-right-radius: 0.4rem; border-bottom-left-radius: 0.4rem;
    height: $roomSizeFacing;
}
.room-left-right{
    @include baseRoom();
    border-bottom: 0.3rem solid $roomDarkGrey; border-top: 0.3rem solid $roomDarkGrey;
    width: $roomSizeFacingDouble;
    transform: translateX(-1rem);
}
.room-left-up{
    @include baseRoom();
    border-bottom: 0.3rem solid $roomDarkGrey; border-right: 0.3rem solid $roomDarkGrey; border-bottom-right-radius: 0.4rem;
    height: $roomSizeFacing; width: $roomSizeFacing;
    transform: translate(-0.5rem, -0.5rem);
}
.room-left-down{
    @include baseRoom();
    border-top: 0.3rem solid $roomDarkGrey; border-right: 0.3rem solid $roomDarkGrey; border-top-right-radius: 0.4rem;
    height: $roomSizeFacing; width: $roomSizeFacing;
    transform: translate(-0.5rem, 0);
}
.room-right-up{
    @include baseRoom();
    border-bottom: 0.3rem solid $roomDarkGrey; border-left: 0.3rem solid $roomDarkGrey; border-bottom-left-radius: 0.4rem;
    height: $roomSizeFacing; width: $roomSizeFacing;
    transform: translate(0rem, -0.5rem);
}
.room-right-down{
    @include baseRoom();
    border-top: 0.3rem solid $roomDarkGrey; border-left: 0.3rem solid $roomDarkGrey; border-top-left-radius: 0.4rem;
    height: $roomSizeFacing; width: $roomSizeFacing;
}
.room-up-down{
    @include baseRoom();
    border-right: 0.3rem solid $roomDarkGrey; border-left: 0.3rem solid $roomDarkGrey;
    height: $roomSizeFacingDouble;
    transform: translateY(-1rem);
}
.room-left-right-up{
    @include baseRoom();
    border-bottom: 0.3rem solid $roomDarkGrey;
    height: $roomSizeFacing; width: $roomSizeFacingDouble;
    transform: translate(-1rem,-0.5rem);
}
.room-right-up-down{
    @include baseRoom();
    border-left: 0.3rem solid $roomDarkGrey;
    width: $roomSizeFacing; height: $roomSizeFacingDouble;
    transform: translate(-0rem,-1rem);
}
.room-left-right-down{
    @include baseRoom();
    border-top: 0.3rem solid $roomDarkGrey;
    height: $roomSizeFacing; width: $roomSizeFacingDouble;
    transform: translate(-1rem,0);
}
.room-left-up-down{
    @include baseRoom();
    border-right: 0.3rem solid $roomDarkGrey;
    width: $roomSizeFacing; height: $roomSizeFacingDouble;
    transform: translate(-0.5rem,-1rem);
}
.room-left-right-up-down{
    @include baseRoom();
    width: $roomSizeFacingDouble; height: $roomSizeFacingDouble;
    transform: translate(-1rem,-1rem);
}